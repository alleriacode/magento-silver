<?php

class Display_Allmembers_IndexController extends Mage_Core_Controller_Front_Action
{
    public function indexAction()
    {
         $this->loadLayout();     
         $this->getLayout()->getBlock('head')->setTitle('Horse Experts');
	 $this->renderLayout();
         
    }
    public function earningsAction()
    {
        if(Mage::getSingleton('customer/session')->isLoggedIn())
       {
         $this->loadLayout();     
         $this->getLayout()->getBlock('head')->setTitle('Earnings-Via Website' );
	 $this->renderLayout();
       }
       else{
          $this->_redirect('customer/account/login');
       }
     }
     public function viaaffiliateAction()
    {
        if(Mage::getSingleton('customer/session')->isLoggedIn())
       {
         $this->loadLayout();     
         $this->getLayout()->getBlock('head')->setTitle('Earnings-Via Affiliate' );
	 $this->renderLayout();
       }
       else{
          $this->_redirect('customer/account/login');
       }
     }
  public function bydateAction()
    {
       $data             =$this->getRequest()->getPost();
      // $from             =explode('/',$data['startdate']);
      // $to               =explode('/',$data['enddate']);
       $from = date("d/m/Y", strtotime($data['startdate']));
       $to = date("d/m/Y", strtotime($data['enddate']));
   //    $fromtimestamp    = mktime(0,0,0,date($from[0]),date($from[1]),date($from[2])) ;
    //   $totimestamp      = mktime(0,0,0,date($to[0]),date($to[1]),date($to[2])) ;
       $expertname       =$data['expertdata'];
       $collection      = Mage::getModel('brst_experts/amount')->getCollection()
                        -> addFieldToFilter('created_at' , array("from" => $from, "to" => $to, "datetime" => false))
                        ->addFieldToFilter('expert_name', array('like'=>$expertname));
      
    
     }
     public function exportcsvAction()
      {
       if(Mage::getSingleton('customer/session')->isLoggedIn())
       {
            $data  =$this->getRequest()->getPost();
           
            $url=Mage::helper('core/url')->getCurrentUrl();
            $expertmodel = Mage::getModel('brst_experts/amount');
            $customer=Mage::getModel('customer/session')->getCustomer();
            $customeremail=$customer->getEmail();
            $adminmodel=Mage::getModel('admin/user')->getCollection()->getData();
            foreach($adminmodel as $admindata)
            {
                if($customeremail==$admindata['email'])
                {
                  $adminuser=explode('-', $admindata['username']);
                 $expertname=$adminuser[0];
                 break;
                }
            }
            
           
             $from = $data['from'];
             $to =$data['to'];
            $affiliatename=$this->getRequest()->getParam('name');
            $value=$this->getRequest()->getParam('value');
            if($_POST['affiliatename']!=NULL)
            {
                $collection = Mage::getModel('brst_experts/amount')->getCollection()
                ->addFieldToFilter('affiliate_name', array('like'=>$_POST['affiliatename']))
                ->addFieldToFilter('expert_name', array('like'=>$expertname));
            }
            elseif($data['datevalue']== '1')
            {
                $collection = Mage::getModel('brst_experts/amount')->getCollection()
                -> addFieldToFilter('created_at' , array("from" => $from, "to" => $to, "datetime" => false))
                ->addFieldToFilter('affiliate_name', array('neq'=>''))
                ->addFieldToFilter('expert_name', array('like'=>$expertname));
            }
            else{
                $collection = Mage::getModel('brst_experts/amount')->getCollection()
                        ->addFieldToFilter('expert_name', array('like'=>$expertname))
                      ->addFieldToFilter('affiliate_name', array('neq'=>''));     
            }
           $curencySymbol =  Mage::app()->getLocale()->currency(Mage::app()->getStore()->getCurrentCurrencyCode())->getSymbol(); 
           
            if($_POST['earning_export']=='csv')
              {
                if($_POST['collectionsize'] > 0)
                {
                $list = array("OrderID:::->Affiliate Name:::->Actual Product Cost:::->Affiliate Earning:::->% of Affiliate Earning:::->Expert Earning");
                $file = fopen("Earnings.csv","w");
                foreach ($list as $line)
                {
                   fputcsv($file,split(':::->',$line));
                }
                    $lost=array();   
                   
                    foreach ($collection as $record) 
                    {
                        $orignalprice=number_format($record['gross_price'],0);
                       $percent=($record['affiliate_pay']/$orignalprice)*100;
                       $lost[]=$record['order_id'].":::->".$record['affiliate_name'].":::->".$curencySymbol.number_format($record['gross_price'],2).":::->".$record['affiliate_pay'].":::->".$percent.":::->".$record['getyoupaid'];
                    }
                    $file = fopen("Earnings.csv","a+");
                    foreach ($lost as $line)
                      {
                        fputcsv($file,split(':::->',$line));
                      } 
                        fseek($file, 0);
                        header('Content-Type: application/csv');
                        header('Content-Disposition: attachment; filename=Earnings.csv');
                        fpassthru($file);
                        fclose($file);
                }
                else 
                 {
                     $session = Mage::getSingleton('core/session');
                     $session->addError($this->__('No record found to generate csv file.'));
                     $this->_redirectReferer();
                 }
             }
                else
                {
                    if($_POST['collectionsize'] > 0)
                    {
                        
                    $DOMObject = new DOMDocument("1.0");
                    header("Content-Type: text/plain");
                    $root_element = $DOMObject->createElement("earnings");
           
                    foreach($collection as $record)
                    {
                        $orignalprice=number_format($record['gross_price'],0);
                        $percent=($record['affiliate_pay']/$orignalprice)*100;

                        $root_element1 = $DOMObject->createElement("details");
                        $DOMObject->appendChild($root_element);
                        $root_element->appendChild($root_element1);

                        $root_item1 = $DOMObject->createElement("orderid");
                        $root_element1->appendChild($root_item1);
                        $root_item_text1 = $DOMObject->createTextNode($record['order_id']);
                        $root_item1->appendChild($root_item_text1);

                        $root_item2 = $DOMObject->createElement("affiliate_name");
                        $root_element1->appendChild($root_item2);
                        $root_item_text2 = $DOMObject->createTextNode($record['affiliate_name']);
                        $root_item2->appendChild($root_item_text2);

                        $root_item3 = $DOMObject->createElement("actualproductcost");
                        $root_element1->appendChild($root_item3);
                        $root_item_text3 = $DOMObject->createTextNode($curencySymbol.number_format($record['gross_price'],2));
                        $root_item3->appendChild($root_item_text3);

                        $root_item4 = $DOMObject->createElement("affiliate_pay");
                        $root_element1->appendChild($root_item4);
                        $root_item_text4 = $DOMObject->createTextNode($record['affiliate_pay']);
                        $root_item4->appendChild($root_item_text4);

                        $root_item5 = $DOMObject->createElement("percentage");
                        $root_element1->appendChild($root_item5);
                        $root_item_text5 = $DOMObject->createTextNode($percent);
                        $root_item5->appendChild($root_item_text5);

                        $root_item6 = $DOMObject->createElement("expertearning");
                        $root_element1->appendChild($root_item6);
                        $root_item_text6 = $DOMObject->createTextNode($record['getyoupaid']);
                        $root_item6->appendChild($root_item_text6);

                    }
                        $file='earnings.xml';
                        $DOMObject->save('earnings.xml');
                        file_put_contents($file,$DOMObject->saveXML());
                        header('Content-type: text/xml');
                        header('Content-Disposition: attachment; filename="earnings.xml"');
                        echo $DOMObject->saveXML();
                }
                else 
                 {
                     $session = Mage::getSingleton('core/session');
                     $session->addError($this->__('No record found to generate xml file.'));
                     $this->_redirectReferer();
                 }
             }
            
       
       }
       else{
          $this->_redirect('customer/account/login');
       }
     }
      public function exportAction()
      {
       if(Mage::getSingleton('customer/session')->isLoggedIn())
       {
            $data  =$this->getRequest()->getPost();
       //    echo "<pre>";print_r($data);die('ssgh');
            $url=Mage::helper('core/url')->getCurrentUrl();
            $expertmodel = Mage::getModel('brst_experts/amount');
            $customer=Mage::getModel('customer/session')->getCustomer();
            $customeremail=$customer->getEmail();
            $adminmodel=Mage::getModel('admin/user')->getCollection()->getData();
            foreach($adminmodel as $admindata)
            {
                if($customeremail==$admindata['email'])
                {
                  $adminuser=explode('-', $admindata['username']);
                 $expertname=$adminuser[0];
                 break;
                }
            }
            
           
             $from = $data['from'];
             $to =$data['to'];
            $affiliatename=$this->getRequest()->getParam('name');
            $value=$this->getRequest()->getParam('value');
            if($data['datevalue']=='1')
            {
                $collection = Mage::getModel('brst_experts/amount')->getCollection()
                -> addFieldToFilter('created_at' , array("from" => $from, "to" => $to, "datetime" => false))
                ->addFieldToFilter('affiliate_name', array('like'=>''))
                ->addFieldToFilter('expert_name', array('like'=>$expertname));
            }
            else{
                $collection = Mage::getModel('brst_experts/amount')->getCollection()
                        ->addFieldToFilter('expert_name', array('like'=>$expertname))
                        ->addFieldToFilter('affiliate_name', array('like'=>''));     
            }
           $curencySymbol =  Mage::app()->getLocale()->currency(Mage::app()->getStore()->getCurrentCurrencyCode())->getSymbol(); 
           
            if($_POST['earning_export']=='csv')
              {
                if($_POST['collectionsize'] > 0)
                {
                $list = array("OrderID:::->Actual Product Cost:::->Expert Earning");
                $file = fopen("Earnings.csv","w");
                foreach ($list as $line)
                {
                   fputcsv($file,split(':::->',$line));
                }
                    $lost=array();   
                   
                    foreach ($collection as $record) 
                    {
                        $orignalprice=number_format($record['gross_price'],0);
                       $percent=($record['affiliate_pay']/$orignalprice)*100;
                       $lost[]=$record['order_id'].":::->".$curencySymbol.number_format($record['gross_price'],2).":::->".$record['getyoupaid'];
                    }
                    $file = fopen("Earnings.csv","a+");
                    foreach ($lost as $line)
                      {
                        fputcsv($file,split(':::->',$line));
                      } 
                        fseek($file, 0);
                        header('Content-Type: application/csv');
                        header('Content-Disposition: attachment; filename=Earnings.csv');
                        fpassthru($file);
                        fclose($file);
                }
                else 
                 {
                     $session = Mage::getSingleton('core/session');
                     $session->addError($this->__('No record found to generate csv file.'));
                     $this->_redirectReferer();
                 }
             }
                else
                {
                    if($_POST['collectionsize'] > 0)
                    {
                        
                    $DOMObject = new DOMDocument("1.0");
                    header("Content-Type: text/plain");
                    $root_element = $DOMObject->createElement("earnings");
           
                    foreach($collection as $record)
                    {
                        $orignalprice=number_format($record['gross_price'],0);
                        $percent=($record['affiliate_pay']/$orignalprice)*100;

                        $root_element1 = $DOMObject->createElement("details");
                        $DOMObject->appendChild($root_element);
                        $root_element->appendChild($root_element1);

                        $root_item1 = $DOMObject->createElement("orderid");
                        $root_element1->appendChild($root_item1);
                        $root_item_text1 = $DOMObject->createTextNode($record['order_id']);
                        $root_item1->appendChild($root_item_text1);

                       

                        $root_item3 = $DOMObject->createElement("actualproductcost");
                        $root_element1->appendChild($root_item3);
                        $root_item_text3 = $DOMObject->createTextNode($curencySymbol.number_format($record['gross_price'],2));
                        $root_item3->appendChild($root_item_text3);

                       

                        $root_item6 = $DOMObject->createElement("expertearning");
                        $root_element1->appendChild($root_item6);
                        $root_item_text6 = $DOMObject->createTextNode($record['getyoupaid']);
                        $root_item6->appendChild($root_item_text6);

                    }
                        $file='earnings.xml';
                        $DOMObject->save('earnings.xml');
                        file_put_contents($file,$DOMObject->saveXML());
                        header('Content-type: text/xml');
                        header('Content-Disposition: attachment; filename="earnings.xml"');
                        echo $DOMObject->saveXML();
                }
                else 
                 {
                     $session = Mage::getSingleton('core/session');
                     $session->addError($this->__('No record found to generate xml file.'));
                     $this->_redirectReferer();
                 }
             }
            
       
       }
       else{
          $this->_redirect('customer/account/login');
       }
     }
     public function affiliatesAction()
    {
       if(Mage::getSingleton('customer/session')->isLoggedIn())
       {
       $this->loadLayout();     
         $this->getLayout()->getBlock('head')->setTitle('Expert Earnings' );
	 $this->renderLayout();
         
       }
       else{
          $this->_redirect('customer/account/login');
       }
     }
    public function eventAction()
    {
         $this->loadLayout();     
	 $this->renderLayout();
    }
    public function productsAction()
    {
         $this->loadLayout();     
	 $this->renderLayout();
    }
    
    public function subscribeAction()
    {
          $arrData=$this->getRequest()->getPost();
          if($arrData['id']!= '')
          {
              $data1['id'] = $arrData['id'];
              $data1['customer_id'] = $arrData['customerid'];
              $data1['customer_email'] = $arrData['customeremail'];
              $data1['member_id'] = $arrData['memberid'];
              $data1['createddate'] = date('d/m/Y');
              $data1['status'] = '1';
              $model = Mage::getModel('allmembers/allmembers')->load($arrData['id']);	
              $model->setData($data1);
              $model->save();
          }
          else 
          {
              $data1['customer_id'] = $arrData['customerid'];
              $data1['customer_email'] = $arrData['customeremail'];
              $data1['member_id'] = $arrData['memberid'];
              $data1['createddate'] = date('d/m/Y');
              $data1['status'] = '1';
              $model = Mage::getModel('allmembers/allmembers');		
              $model->setData($data1);
              $model->save();
          }
             $session = Mage::getSingleton('core/session');
             $session->addSuccess($this->__('You have been subscribed successfully.'));
             $this->_redirectReferer();
    }
    
   public function unsubscribeAction()
   {
          $arrData=$this->getRequest()->getPost();
          if($arrData['id']!= '')
          {
          $data1['id'] = $arrData['id'];
          $data1['customer_id'] = $arrData['customerid'];
          $data1['customer_email'] = $arrData['customeremail'];
          $data1['member_id'] = $arrData['memberid'];
          $data1['createddate'] = date('d/m/Y');
          $data1['status'] = '0';
          $model = Mage::getModel('allmembers/allmembers')->load($arrData['id']);	
          $model->setData($data1);
          $model->save();
          $session = Mage::getSingleton('core/session');
          $session->addSuccess($this->__('You have been unsubscribed successfully.'));
          $this->_redirectReferer();
          }
   }
    
   public function videosAction()
   {
        $this->loadLayout(); 
         $this->getLayout()->getBlock('head')->setTitle('Member Videos');
	$this->renderLayout();
   }
   
}
?>