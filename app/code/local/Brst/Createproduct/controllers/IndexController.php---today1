<?php 
class Brst_Createproduct_IndexController extends Mage_Core_Controller_Front_Action
{
    public function indexAction()
    {
     $this->loadLayout(array('default'));
     $this->renderLayout();
    }
   
    
     public function createAction()
      {
        // echo "<pre>";print_r($this->getRequest()->getPost());die('helo');
            Mage::getSingleton("core/session", array("name" => "frontend"));
            $storeId = Mage::app()->getStore()->getId(); // get store id
            $filePath = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);
            $productdata=$this->getRequest()->getPost();
            try {
                
                    $product = Mage::getModel('catalog/product');
                    $product->setStoreId($storeId);
                    $product->setWebsiteIds(array(
                    Mage::app()->getStore($storeId)->getWebsiteId()));
                    $product->setAttributeSetId(4);
                    $product->setCategoryIds(array($productdata['productcategory']));
                    $product->setTypeId('downloadable');
                    $product->setSku($productdata['sku']);
                    $product->setPrice($productdata['productprice']);
                    $product->setSpecialPrice($productdata['specialprice']);
                    $product->setSpecialProduct($productdata['specialproduct']);
                    $product->setDownlodableOption($productdata['downloadableoption']);
                    $product->setProductMaterial($productdata['productmaterial']);
                    $product->setStatus(1);
                    $product->setVisibility(4);
                    $product->setTaxClassId(0);
                    $product->setStockData(array('is_in_stock'=>0, 'qty' => 1));
                    $product->setLinksPurchasedSeparately(0);
                    $product->setLinksExist(false);
                    $product->setDescription($productdata['description']);
                    $product->setShortDescription($productdata['shortdescription']); //added, meta description to 'short description' field, you can change this value
                    $product->setName($productdata['productname']);
                    $product->setLinksTitle("Download");
                    $product->save();
              
                $stockItem = Mage::getModel('cataloginventory/stock_item')->loadByProduct($product->getId());
                $stockItemId = $stockItem->getId();
                $stock = array();
                if (!$stockItemId) {
                    $stockItem->setData('product_id', $product->getId());
                    $stockItem->setData('stock_id', $productdata['$productqty']);
                } else {
                        $stock = $stockItem->getData();
                }
                $stockItem->setIsInStock($productdata['$productqty']);
                $stockItem->save();



                $linkModel = Mage::getModel('downloadable/link')->setData(array(
                        'product_id' => $product->getId(),
                        'sort_order' => 0,
                        'number_of_downloads' => 0, // Unlimited downloads
                        'is_shareable' => 2, // Not shareable
                        'link_url' => $productdata['linkurl'],
                        'link_type' => 'file',
                        'link_file' => json_encode($linkfile),
                        'sample_url' => $productdata['sampleurl'],
                        'sample_file' => json_encode($samplefile),
                        'sample_type' => 'url',
                        'use_default_title' => false,
                        'title' => 'downloadable link',
                        'default_price' => 0,
                        'price' => 0,
                        'store_id' => 0,
                        'website_id' => $product->getStore()->getWebsiteId(),
                ));

                $linkModel->setLinkFile($linkFileName)->save();
                
                $newProductId = 0;		
		$product->setWebsiteIds(array(Mage::app()->getStore(true)->getWebsite()->getId()));
		$newProductId = $product->getId();
                
                $product = Mage::getModel('catalog/product')->load($new_product_id);
                
                
               /** EXTERNAL IMAGE IMPORT - START **/
                $image_url  = $productdata['productimage']; //get external image url from csv
                $image_type = substr(strrchr($image_url,"."),1); //find the image extension
                $filename   = md5($image_url . $productdata['sku']).'.'.$image_type; //give a new name, you can modify as per your requirement
                $filepath   = Mage::getBaseDir('media') . DS . 'import'. DS . $filename; //path for temp storage folder: ./media/import/
                file_put_contents($filepath, file_get_contents(trim($image_url))); //store the image from external url to the temp storage folder
                $mediaAttribute = array (
                        'thumbnail',
                        'small_image',
                        'image'
                );
                /**
                 * Add image to media gallery
                 *
                 * @param string        $file              file path of image in file system
                 * @param string|array  $mediaAttribute    code of attribute with type 'media_image',
                 *                                         leave blank if image should be only in gallery
                 * @param boolean       $move              if true, it will move source file
                 * @param boolean       $exclude           mark image as disabled in product page view
                 */
                $product->addImageToMediaGallery($filepath, $mediaAttribute, false, false);
                /** EXTERNAL IMAGE IMPORT - END **/
               //  $product->setMediaGallery (array('images'=>array (), 'values'=>array ()));
                // $product->addImageToMediaGallery ('C:\Users\lenovo\Pictures'.$productdata['productimage'], array ('image','small_image','thumbnail'), false, false);
               //   $product->addImageToMediaGallery(Mage::getBaseDir('media') . DS . 'import' . $productdata['productimage'], null, false, false);
                 Mage::app()->setCurrentStore(Mage_Core_Model_App::ADMIN_STORE_ID);
                 
					
         

                  $product->save();
                return $product->getProductUrl();
            } catch (Exception $e) {
                echo "Exception : ".$e->getMessage();
                exit;
            }
    }

}
?>