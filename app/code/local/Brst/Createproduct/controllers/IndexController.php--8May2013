<?php 
class Brst_Createproduct_IndexController extends Mage_Core_Controller_Front_Action
{
    public function indexAction()
    {
     $this->loadLayout(array('default'));
     $this->renderLayout();
    }
   
    
     public function createAction()
      {
       
           $productdata1=$this->getRequest()->getPost();
           $api = new Mage_Catalog_Model_Product_Api();

           $attribute_api = new Mage_Catalog_Model_Product_Attribute_Set_Api();
           $attribute_sets = $attribute_api->items();

           $productData = array();
           try  
           {
                $productData['website_ids'] = array(1);
                $productData['categories'] = array($productdata1['productcategory']);
                $productData['status'] = 1;

                //$productData['producttype'] = 'video';
                $productData['member_list'] = $productdata1['productexpertname'];
                $productData['live_streaming'] =$productdata1['livestreaming'];
                $productData['social_streaming'] =$productdata1['socialstreaming'];
                $productData['name'] = $productdata1['productname'] ;
                $productData['description'] = $productdata1['description'];
                $productData['short_description'] = $productdata1['shortdescription'];
                $productData['sku'] = time();
                $productData['price'] = $productdata1['productprice'];
                $productData['specialprice'] =$productdata1['specialprice'];
                $productData['qty'] = $productdata1['qty'];
              //  $productData['productcategory'] = $productdata1['productcategory'];
                $productData['downloadableoption'] =$productdata1['downloadableoption'];
                $productData['product_material'] = $productdata1['productmaterial'];
                $productData['special_product'] =$productdata1['specialproduct'];
                $productData['sampleurl'] =$productdata1['sampleurl'];
                $productData['linkurl'] = $productdata1['linkurl'];
                $productData['tax_class_id'] =2;
            
                $new_product_id = $api->create('downloadable',$attribute_sets[0]['set_id'],'ND3',$productData);

                if($productdata1['producttype']=='ustream')
                    {
                        $eventstatus='1';
                        $eventmodel  = Mage::getModel('events/events');
                        $eventmodel->setEventTitle($productdata1['productname']);
                        $eventmodel->setEventVenu($productdata1['venue']);
                        $eventmodel->setEventStartDate($productdata1['startdate']);
                        $eventmodel->setEventEndDate($productdata1['enddate']);
                        $eventmodel->setEventContent($productdata1['shortdescription']);
                        $eventmodel->setEventUrlPrefix($productdata1['urlprefix']);
                        $eventmodel->setEventStatus($eventstatus);
                        $eventmodel->setCreatedTime(now());
			$eventmodel->setUpdateTime(now());
                        $eventmodel->save();
                        $eventid=$eventmodel->getEventId();
                        $connection = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $query="insert into events_product(eventid,product_id) values($eventid,$new_product_id)";
                        $result=$connection->query($query);
                        $connection1 = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $query1="insert into events_store(event_id,store_id) values($eventid,'0')";
                        $result1=$connection1->query($query1);
                    }
                    //  UPLOAD IMAGE    
                    
                    if($_FILES['file']['name']!= NULL)
                    {
                        $absolute_path = Mage::getBaseDir('media') . DS .('import');
                        $relative_path = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);
                        $files =$_FILES['file']['name'];
                        $var = rand(0,99);
                        $files = $var.'_'.$files;
                        $path = Mage::getBaseDir('media') . DS."import/".$files;
                          // Starting upload
                        $uploader = new Varien_File_Uploader('file');
                          //Here 4 extention would work
                        $uploader->setAllowedExtensions(array('jpg','jpeg','gif','png'));
                        $uploader->setAllowRenameFiles(false);
                        $uploader->setFilesDispersion(false);
                        $uploader->save($absolute_path,$files);
                        $product = Mage::getModel('catalog/product')->load($new_product_id);
                        $file_url = $files;
                        $product->addImageToMediaGallery($path,array('image'),false,false);
                        $product->addImageToMediaGallery($path,array('small_image'),false,false);
                        $product->addImageToMediaGallery($path,array('thumbnail'),false,false); 
                        Mage::app()->setCurrentStore(Mage_Core_Model_App::ADMIN_STORE_ID);
                        $product->save();
                    }
                   
            $stockItem = Mage::getModel('cataloginventory/stock_item');
            $stockItem->loadByProduct( $new_product_id );

            $stockItem->setData('use_config_manage_stock', 1);
            $stockItem->setData('qty', $productdata1['qty']);
            $stockItem->setData('min_qty', 0);
            $stockItem->setData('use_config_min_qty', 1);
            $stockItem->setData('min_sale_qty', 0);
            $stockItem->setData('use_config_max_sale_qty', 1);
            $stockItem->setData('max_sale_qty', 0);
            $stockItem->setData('use_config_max_sale_qty', 1);
            $stockItem->setData('is_qty_decimal', 0);
            $stockItem->setData('backorders', 0);
            $stockItem->setData('notify_stock_qty', 0);
            $stockItem->setData('is_in_stock', 1);
            $stockItem->setData('tax_class_id', 0);

            $stockItem->save();
            
            $linkModel = Mage::getModel('downloadable/link')->setData(array(
                            'product_id' => $new_product_id,
                            'sort_order' => 0,
                            'number_of_downloads' => 0, // Unlimited downloads
                            'is_shareable' => 2, // Not shareable
                            'link_url' => $productdata1['linkurl'],
                            'link_type' => 'url',
                            'link_file' => '',
                            'sample_url' => $productdata1['sampleurl'],
                            'sample_file' => '',
                            'sample_type' => 'url',
                            'use_default_title' => false,
                            'title' => 'downloadable link',
                            'default_price' => 0,
                            'price' => 0,
                            'store_id' => 0,
                            'website_id' => 1,
                    ));

             $linkModel->setLinkFile($linkFileName)->save();
               Mage::getSingleton('core/session')->addsuccess('The Product has been Created');
               $this->_redirect('createproduct/index/index');
      }
         catch (Exception $e) {
                echo "Exception : ".$e->getMessage();
                exit;
            }
         
         
         
       // echo $storeId = Mage::app()->getStore()->getId(); 
     //  echo Mage::app()->getStore($storeId)->getWebsiteId();die("jj");
          //echo "<pre>";print_r($this->getRequest()->getPost());die('helo');
            //Mage::getSingleton("core/session", array("name" => "frontend"));
          /*  $storeId = Mage::app()->getStore()->getId(); // get store id
            $filePath = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);
            $productdata=$this->getRequest()->getPost();
            try {
                    
                
                    $product = Mage::getModel('catalog/product');
                    //$product->setStoreId($storeId);
                    $product->setDescription($productdata['description']);
                    $product->setShortDescription($productdata['shortdescription']); //added, meta description to 'short description' field, you can change this value
                    $product->setName($productdata['productname']);
                    $product->setWebsiteIds(array(Mage::app()->getStore(true)->getWebsite()->getId()));
                    $product->setAttributeSetId(4);
                    $product->setCategoryIds(array($productdata['productcategory']));
                    $product->setTypeId('downloadable');
                    $product->setSku($productdata['sku']);
                    $product->setPrice($productdata['productprice']);
                    $product->setSpecialPrice($productdata['specialprice']);
                    $product->setSpecialProduct($productdata['specialproduct']);
                    $product->setDownlodableOption($productdata['downloadableoption']);
                    $product->setProductMaterial($productdata['productmaterial']);
                    $product->setMemberList($productdata['productexpertname']);
                    $product->setLiveStreaming($productdata['livestreaming']);
                    $product->setSocialStreaming($productdata['socialstreaming']);
                    //$product->setStartDate($productdata['startdate']);
                    //$product->setEndDate($productdata['enddate']);
                    $product->setStatus(1);
                    $product->setVisibility(4);
                    $product->setTaxClassId(0);
                    //$product->setStockData(array('is_in_stock'=>0, 'qty' => 1));
                 //   $product->setLinksPurchasedSeparately(0);
                   // $product->setLinksExist(false);
                  
                    $product->setLinksTitle("Download");
                   
                    $product->save();
                   
                    $newProductId = 0;		
                    $newProductId = $product->getId();
                    
                    if($productdata['producttype']=='ustream')
                    {
                        $eventstatus='1';
                        $eventmodel  = Mage::getModel('events/events');
                        $eventmodel->setEventTitle($productdata['productname']);
                        $eventmodel->setEventVenu($productdata['venue']);
                        $eventmodel->setEventStartDate($productdata['startdate']);
                        $eventmodel->setEventEndDate($productdata['enddate']);
                        $eventmodel->setEventContent($productdata['content']);
                        $eventmodel->setEventUrlPrefix($productdata['urlprefix']);
                        $eventmodel->setEventStatus($eventstatus);
                        $eventmodel->setCreatedTime(now());
			$eventmodel->setUpdateTime(now());
                        $eventmodel->save();
                        $eventid=$eventmodel->getEventId();
                        $connection = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $query="insert into events_product(eventid,product_id) values($eventid,$newProductId)";
                        $result=$connection->query($query);
                        $connection1 = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $query1="insert into events_store(event_id,store_id) values($eventid,'0')";
                        $result1=$connection1->query($query1);
                         
                        
                    }
                    //  UPLOAD IMAGE    
                    
                    if($_FILES['file']['name']!= NULL)
                    {
                        $absolute_path = Mage::getBaseDir('media') . DS .('import');
                        $relative_path = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);
                        $files =$_FILES['file']['name'];
                        $var = rand(0,99);
                        $files = $var.'_'.$files;
                        $path = Mage::getBaseDir('media') . DS."import/".$files;
                          // Starting upload
                        $uploader = new Varien_File_Uploader('file');
                          //Here 4 extention would work
                        $uploader->setAllowedExtensions(array('jpg','jpeg','gif','png'));
                        $uploader->setAllowRenameFiles(false);
                        $uploader->setFilesDispersion(false);
                        $uploader->save($absolute_path,$files);
                        $product = Mage::getModel('catalog/product')->load($newProductId);
                        $file_url = $files;
                        $product->addImageToMediaGallery($path,array('image'),false,false);
                        $product->addImageToMediaGallery($path,array('small_image'),false,false);
                        $product->addImageToMediaGallery($path,array('thumbnail'),false,false); 
                        Mage::app()->setCurrentStore(Mage_Core_Model_App::ADMIN_STORE_ID);
                        $product->save();
                    }
                   
                
                    
                    $stockItem = Mage::getModel('cataloginventory/stock_item');
                    $stockItem->loadByProduct( $newProductId );

                    $stockItem->setData('use_config_manage_stock', 1);
                    $stockItem->setData('qty', $productdata['qty']);
                    $stockItem->setData('min_qty', 0);
                    $stockItem->setData('use_config_min_qty', 1);
                    $stockItem->setData('min_sale_qty', 0);
                    $stockItem->setData('use_config_max_sale_qty', 1);
                    $stockItem->setData('max_sale_qty', 0);
                    $stockItem->setData('use_config_max_sale_qty', 1);
                    $stockItem->setData('is_qty_decimal', 0);
                    $stockItem->setData('backorders', 0);
                    $stockItem->setData('notify_stock_qty', 0);
                    $stockItem->setData('is_in_stock', 1);
                    $stockItem->setData('tax_class_id', 0);

                    $stockItem->save();


                    if($productdata['producttype']!='ustream')
                    {
                     $linkModel = Mage::getModel('downloadable/link')->setData(array(
                        'product_id' => $product->getId(),
                        'sort_order' => 0,
                        'number_of_downloads' => 0, // Unlimited downloads
                        'is_shareable' => 2, // Not shareable
                        'link_url' => $productdata['linkurl'],
                        'link_type' => 'url',
                        'link_file' => json_encode($linkfile),
                        'sample_url' => $productdata['sampleurl'],
                        'sample_file' => json_encode($samplefile),
                        'sample_type' => 'url',
                        'use_default_title' => false,
                        'title' => 'downloadable link',
                        'default_price' => 0,
                        'price' => 0,
                        'store_id' => 0,
                        'website_id' => $product->getStore()->getWebsiteId(),
                ));

                $linkModel->setLinkFile($linkFileName)->save();
                    }
               
               Mage::getSingleton('core/session')->addsuccess('The Product has been Created');
               $this->_redirect('createproduct/index/index');
                
            } catch (Exception $e) {
                echo "Exception : ".$e->getMessage();
                exit;
            }*/
    }
    public function showproductAction()
    {
     $this->loadLayout(array('default'));
     $this->renderLayout();
    }

}
?>